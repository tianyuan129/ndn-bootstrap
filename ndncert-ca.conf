---
prefix_config:
  # the CA's identity prefix
  prefix_name: '/ndn'

auth_config:
  # name acceptance policy for the CA
  email:
    mail_conf: 'ndncert-ca-mail.conf'
    # domain_split: alice@gmail.com -> /alice/gmail/com
    # plain_split: alice@gmail.com -> /alice/gmail.com
    accept_policy:
      lvs: '#email: /"alice"/"cs.ucla.edu"
            #root: /"ndn"
            #KEY: "KEY"/_/_/_version & { _version: $eq_type("v=0") }
            #cert: #root/_/#KEY <= #email'
      translator: plain_split
      full_lvs: True

      # only be read when full_lvs = False
      fallback:
        # default fallback is emailing the operator, but this still fail the acceptor
        operator_email: 'tianyuan@cs.ucla.edu'
        # if user override, switch to user defined func
        override: False
        # purely user defined, autofail as default
        override_func: autofail
        
# not supported yet 
db_config:
  # choose one among sqlite3, leveldb, and mongodb
  db_type: 'sqlite3'
  
  # only the chosen db's config will be read
  sqlite3:
    'path': '~/.ndn/ndncert-ca-python/sqlite3.db'   # filepath to sqlite3 database file
  leveldb:
    'dir': '~/.ndn/ndncert-ca-python/leveldb/'      # directory to leveldb database files
  mongodb:
    'db': 'repo'
    'collection': 'data'

tcp_bulk_insert:
  addr: '0.0.0.0'
  port: '7376'
  # when register_root is False, whether packets inserted via TCP triggers prefix registration
  register_prefix: True 


logging_config:
  # one of 'CRITICAL', 'ERROR', 'WARNING', 'INFO', 'DEBUG'
  level: 'INFO'
  # absolute path to log file. If not given, logs to stdout
  # file: 'ca.log'